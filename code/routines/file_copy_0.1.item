package routines;
import java.io.*;
import java.util.*;


/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class file_copy {

public static void copy_f(String source , String destination) throws IOException{
		
		File file = new File(source);
		File copy = new File(destination);
		
		BufferedReader input = new BufferedReader(new FileReader(file));
		BufferedWriter writer = new BufferedWriter(new FileWriter(copy));
		
		String content;
		while((content = input.readLine())!= null){
			
			String content_split[] = content.split("\n");
			for (String line : content_split){
				writer.append(line);
				writer.append("\n");
			}
		}
		
		writer.close();
		input.close();
		
		

	}
	

public static void TransRequestExportShares(String MyPath , String unisysca  , String  unisyssh) throws IOException{
		
		File a = new File("");
		File f = new File("");
		String strMyCashFile;
		String strMySharesFile;
		String strTodayCashFile;
		String strTodaySharesFile;
		String aReadAllTextFile;
		String fReadAllTextFile;
		
		File checkfile;
		
		
		strTodayCashFile = unisysca + (time.now_date()) + ".dat";
		strTodaySharesFile = unisyssh + (time.now_date()) + ".dat";
		System.out.println(strTodaySharesFile);
		
		//Name my files
		strMyCashFile = MyPath + "TransCash.txt";
		strMySharesFile = MyPath + "TransShare.txt";
		//Working with shares
		//Adding records only if we have something
		a = new File(strMySharesFile);
		BufferedReader input_a = new BufferedReader(new FileReader(a));
		if(input_a.readLine()!=null){
			 checkfile = new File(strTodaySharesFile);
			if(checkfile.exists()){  //check if file exists 
				f = new File(strTodaySharesFile); 
				a = new File(strMySharesFile);
				Scanner Read_f = new Scanner(f); 
				Scanner Read_a = new Scanner(a);
				fReadAllTextFile = Read_f.useDelimiter("\\A").next(); // read  contents of File f and assign them to fReadAllTextFile
				aReadAllTextFile = Read_a.useDelimiter("\\A").next();// read  contents of File a and assign them to fReadAllTextFile
				
				BufferedWriter writer_f = new BufferedWriter(new FileWriter(f)); // Bufferedwriter to write into File f
				writer_f.write(fReadAllTextFile); // write into file F contents of File f
				writer_f.write(aReadAllTextFile);// write into file F contents of File a
				writer_f.close();
				Read_f.close();
				Read_a.close();
				
			}
			
			else{ // if file/path does not exist
				
				a = new File(strMySharesFile);
				Scanner Read_a = new Scanner(a);
				if(Read_a.hasNext()){
				aReadAllTextFile = Read_a.useDelimiter("\\A").next(); // read and save content of File a
				
				
				f = new File(strTodaySharesFile); // create strTodaySharesFile text file
				BufferedWriter write_f = new BufferedWriter(new FileWriter(f));
				write_f.write(aReadAllTextFile); // write into File f contents of File a
				write_f.close();
				}

				}
			
		 }
		else{ // if File srtMySharesFile empty
		
	          input_a.close();
	          
		}
		
		//'UNISYS DR file name change per Wright, Chris 3/14/2013
		file_copy.copy_f(strTodaySharesFile,unisyssh+ "UNISYS-H-DR.dat"); //copy contents of strTodaySharesFile to  UnisysSharesPath + "UNISYS-H-DR.dat"
	//END
	}

public static void  combinefilerunjobs_1(String MyPath ,String UnisysCashPath ,String strFinalPath  ) throws IOException{



File FinalFile = new File(strFinalPath);
if(FinalFile.exists()){
       FinalFile.delete();
}
String strTodayCash = UnisysCashPath + TalendDate.getDate("yyMMdd") + ".dat";
String strMyCash = MyPath + "SkyCash.txt";
File strTodayCashFile = new File(strTodayCash);
File strMyCashFile = new File(strMyCash);
BufferedReader a = new BufferedReader(new FileReader(strMyCashFile));
if(a.readLine() != null){
       a.close();
       if(strTodayCashFile.exists()){
             file_copy.copy_f(strTodayCash,strTodayCash + "a");
       
       Scanner read_a = new Scanner(strMyCashFile);
       Scanner read_f = new Scanner(strTodayCashFile);
       String aReadAllTextFile = read_a.useDelimiter("\\A").next();
       String fRealAllTextFile = read_f.useDelimiter("\\A").next();
       read_f.close();
       read_a.close();
       
       BufferedWriter fw = new BufferedWriter(new FileWriter(strTodayCashFile));
       fw.write(fRealAllTextFile);
       fw.write(aReadAllTextFile);
       fw.close();
}
else{
       Scanner read_a = new Scanner(strMyCashFile);
       String aReadAllTextFile = read_a.useDelimiter("\\A").next();
       read_a.close();
       
       BufferedWriter fw = new BufferedWriter(new FileWriter(strTodayCashFile));
fw.write(aReadAllTextFile);
fw.close();

}

}
else{

       a.close();
       
}

file_copy.copy_f(strTodayCash,strFinalPath);
       
}


       

public static void combinefilerunjobs_2(String MyPath) throws IOException{

/*copy_file("\\\\Dfast02\\C\\SkylineProcess\\Coupon.csv","\\\\Dfast02\\C\\SkylineBackup\\Coupon" + FileName()  + ".csv");
copy_file("\\\\Dfast02\\C\\SkylineBackup\\SkyCash.txt","\\\\Dfast02\\C\\SkylineBackup\\SkyCash" + FileName()  + ".txt");
copy_file("\\\\filesrv\\dataivrs\\unisysca\\result.dat","\\\\Dfast02\\C\\SkylineBackup\\result" + FileName()  + ".dat");

	file_copy.copy_f("\\\\Dfast02\\C\\SkylineProcess\\Coupon.csv",MyPath + TalendDate.getDate("yyMMdd") + ".csv");
	file_copy.copy_f("\\\\Dfast02\\C\\SkylineBackup\\SkyCash.txt",MyPath + TalendDate.getDate("yyMMdd") + ".txt");
	file_copy.copy_f("\\\\filesrv\\dataivrs\\unisysca\\result.dat",MyPath +TalendDate.getDate("yyMMdd") + ".dat");
File file_a = new File("\\\\Dfast02\\C\\SkylineProcess\\*.csv");
File file_b = new File("\\\\Dfast02\\C\\SkylineBackup\\SkyCash.tx");

/*file_a.delete();
file_b.delete();
*/
	
	file_copy.copy_f("C:\\Akila\\Transrequest\\coupon.csv",MyPath + TalendDate.getDate("yyMMdd") + ".csv");
	file_copy.copy_f("C:\\Akila\\Transrequest\\SkyCash.txt",MyPath + TalendDate.getDate("yyMMdd") + ".txt");
	file_copy.copy_f("C:\\Akila\\Transrequest\\result.dat",MyPath +TalendDate.getDate("yyMMdd") + ".dat");
File file_a = new File("\\\\Dfast02\\C\\SkylineProcess\\*.csv");
File file_b = new File("\\\\Dfast02\\C\\SkylineBackup\\SkyCash.txt");
	
}


public static void Renamelogfile(String MyPath) throws IOException{
	

	String LogFile = MyPath + "skylog.log";
	String FinalFile = MyPath + "skylog" + time.datefunction() + ".log";
	file_copy.copy_f(LogFile, FinalFile);
	File fs = new File(LogFile);
	fs.delete(); // delete LogFile


	LogFile = MyPath + "skylog2.log";
	FinalFile = MyPath + "skylog2" + time.datefunction() + ".log";
	file_copy.copy_f(LogFile, FinalFile);
	fs = new File(LogFile);
	fs.delete(); // delete LogFile
}

public static void createSkylinebutFilesInOnce(String MyPath)throws IOException{
	
//	MyPath = "\\Dfast02\C$\SkylineProcess\"
	
	//String FinalFile = "\\\\filesrv\\dataivrs\\unisysca\\result.dat";
	String DQ = "\"";
	File strTodayBatFile  = new File(MyPath + "GetDataCouponNewAllJobs.bat");
	BufferedWriter f = new BufferedWriter(new FileWriter(strTodayBatFile));

	String aReadAllTextFile ="del \\Dfast02\\C$\\SkylineProcess\\*.csv" +  "\n";
	f.write(aReadAllTextFile);
	aReadAllTextFile = DQ + "C:\\Program Files\\Skyline Data\\DirectFed\\Retrieve\\ASTRetrieve.exe" + DQ + " /username 'administrator' /password '123456' /output " + DQ + "\\Dfast02\\C$\\SkylineProcess" + DQ + " /manifest 'skyout.csv' /logfile " + DQ + "\\Dfast02\\C$\\SkylineProcess\\skylog.log"  + DQ + " /terminal '105069' /dbconnect " + DQ + "Data Source=sql2k3;Trusted_Connection=yes;Initial Catalog=DFClients" + DQ + " /a2ia " + DQ + "\\filesrv\\ast\\departments\\directfed\\A2iA Configuration" + DQ + " /fromdate " + time.FileName_mm_dd_yy() + " /thrudate " + time.FileName_mm_dd_yy()  + " /coupon 'ocp new a'"  +  "\n";
	f.write(aReadAllTextFile);
	aReadAllTextFile = DQ + "C:\\Program Files\\Skyline Data\\DirectFed\\Retrieve\\ASTRetrieve.exe" + DQ + " /username 'administrator' /password '123456' /output " + DQ + "\\Dfast02\\C$\\SkylineProcess" + DQ + " /manifest 'skyoutW2.csv' /logfile " + DQ + "\\Dfast02\\C$\\SkylineProcess\\skylog.log"  + DQ + " /terminal '100102' /dbconnect " + DQ + "Data Source=sql2k3;Trusted_Connection=yes;Initial Catalog=DFClients" + DQ + " /a2ia " + DQ + "\\filesrv\\ast\\departments\\directfed\\A2iA Configuration" + DQ + " /fromdate " + time.FileName_mm_dd_yy() + " /thrudate " + time.FileName_mm_dd_yy()  + " /coupon 'ocp new a'"  +  "\n";
	f.write(aReadAllTextFile);
	aReadAllTextFile = DQ + "C:\\Program Files\\Skyline Data\\DirectFed\\Retrieve\\ASTRetrieve.exe" + DQ + " /username 'administrator' /password '123456' /output " + DQ + "\\Dfast02\\C$\\SkylineProcess" + DQ + " /manifest 'skyoutW3.csv' /logfile " + DQ + "\\Dfast02\\C$\\SkylineProcess\\skylog.log"  + DQ + " /terminal '100210' /dbconnect " + DQ + "Data Source=sql2k3;Trusted_Connection=yes;Initial Catalog=DFClients" + DQ + " /a2ia " + DQ + "\\filesrv\\ast\\departments\\directfed\\A2iA Configuration" + DQ + " /fromdate " + time.FileName_mm_dd_yy()  + " /thrudate " + time.FileName_mm_dd_yy()  + " /coupon 'ocp new a'"  +  "\n";
	f.write(aReadAllTextFile);
	aReadAllTextFile = DQ + "C:\\Program Files\\Skyline Data\\DirectFed\\Retrieve\\ASTRetrieve.exe" + DQ + " /username 'administrator' /password '123456' /output " + DQ + "\\Dfast02\\C$\\SkylineProcess" + DQ + " /manifest 'skyoutW4.csv' /logfile " + DQ + "\\Dfast02\\C$\\SkylineProcess\\skylog.log"  + DQ + " /terminal '105070' /dbconnect " + DQ + "Data Source=sql2k3;Trusted_Connection=yes;Initial Catalog=DFClients" + DQ + " /a2ia " + DQ + "\\filesrv\\ast\\departments\\directfed\\A2iA Configuration" + DQ + " /fromdate " + time.FileName_mm_dd_yy()  + " /thrudate " + time.FileName_mm_dd_yy()  + " /coupon 'ocp new a'"  +  "\n";
	f.write(aReadAllTextFile);
	aReadAllTextFile ="copy \\Dfast02\\C$\\SkylineProcess\\*.csv \\Dfast02\\C$\\SkylineProcess\\Coupon.csv/b" +  "\n";
	f.write(aReadAllTextFile);
	f.close();

}


public static void CreateDirectFedCouponFile(String MyPath) throws IOException{
	
	

    String strTodayBatFile = MyPath + "GetDataCouponNewAllJobs.bat";
    String DQ = "\"" ;
    
    BufferedWriter f  = new BufferedWriter(new FileWriter(strTodayBatFile));
    //Coupon all files
    String aReadAllTextFile ="del \\Dfast02\\C$\\DirectFedCoupons\\*.csv" +  "\n";
    f.write(aReadAllTextFile);
    String cProgramFiles  = "\"C:\\Program Files (x86)\\Skyline Data\\DirectFed\\CouponsOnlyRetrieve\\CouponsOnlyRetrieve.exe \" /dbconnect \"Data Source=sql2k3;Trusted_Connection=yes;Initial Catalog=DFClients \"/output \"\\\\Dfast02\\C$\\DirectFedCoupons\\\" /terminal ";
    String administratorLogIn = " /username 'administrator' /password '123456' /fromdate " + time.FileName_mm_dd_yy() +" /thrudate " + time.FileName_mm_dd_yy() + "/manifest ";
    String final_part_path = " /logfile \"\\Dfast02\\C$\\DirectFedCoupons\\skylog.log\"  /format 'csv' /A2iA \"\\\\filesrv\\ast\\departments\\directfed\\A2iA Configuration\" /type 'coupons' /coupon 'Ast-CouponsOnly' /status 'Corrected'"  +  "\n";
    String terminal_numbers[] = {"105148" , "105070" , "105148",  "105070" , "105148" , "105070" ,"105148", "105070"};
    String csv_Files[] = {"retrieve1.csv","retrieve4.csv","newdr1.csv","newdr4.csv","olddr1.csv","olddr4.csv","ampolddr1.csv","ampolddr4.csv"};
    String Dfast_path1 = "copy \\\\Dfast02\\C$\\DirectFedCoupons\\";
    String Dfast_path2= " \\\\Dfast02\\C$\\DirectFedCoupons\\";
    String csv_all[] = {"retrieve*.csv","newdr*.csv","olddr*.csv","ampolddr*.csv"};
    String Dfast_csv_files[] = {"Coupon.csv","NDRC.csv","ODRC.csv","ODRCAmp.csv"};
    for(int i = 0 ; i < terminal_numbers.length ; i++)
           f.write(cProgramFiles + terminal_numbers[i] + administratorLogIn + csv_Files[i] + final_part_path);
    for(int i = 0; i < csv_all.length ; i++)
           f.write(Dfast_path1 + csv_all[i] + Dfast_path2 + Dfast_csv_files[i] + "/b" + "\n");
    f.close();

}

}